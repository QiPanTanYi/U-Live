<style>
.page {
	position: absolute;
	left: 0;
	right: 0;
	top: 0;
	bottom: 0;
	background-color: #181b27;
}

.line {
	height: 1rpx;
	background-color: #393a41;
	width: 750rpx;
}

.left-picker-part {
	display: flex;
	flex-direction: row;
	justify-content: flex-start;
	width: 580rpx;
	height: 120rpx;
}

.left-choose {
	width: 100rpx;
	height: 120rpx;
	display: flex;
	flex-direction: row;
	justify-content: flex-start;
}

.icon-right {
	width: 60rpx;
	height: 60rpx;
}

/* .birthday-picker {
	background-color: #4a4c52;
} */

.birthday-item {
	background-color: #4a4c52;
	display: flex;
	flex-direction: row;
	width: 680rpx;
	height: 140rpx;
	border-radius: 20px;
}
.date-lable {
	color: #FFFFFF;
	margin-left: 40rpx;
}
.picker-box {
	margin-top: 50rpx;
	display: flex;
	flex-direction: row;
	justify-content: center;
}

.tips {
	font-size: 12px;
	font-weight: 400;
	color: #BFBFBF;
	width: 700rpx;
	margin-top: 20rpx;
}
</style>
<template>
	<view class="page">
		<!-- <view class="line"></view> -->
		
			
		<view class="picker-box" style="align-self: center;">
			
			<picker 
				class="birthday-item" 
				mode="date" 
				:value="date" 
				:start="startDate" 
				:end="endDate" 
				@change="bindDateChange">
				<view class="left-picker-part" style="align-self: center;">
					<text class="date-lable" style="align-self: center;">{{date}}</text>
				</view>
				
				<view class="left-choose" style="align-self: center;">
					<image src="/static/images/icon-datepicker.png" class="icon-right" style="align-self: center;"></image>
				</view>
			</picker>
			
		</view>
		
		<view class="" style="align-self: center;">
			<text class="tips">*注：点击即可选择生日噢~</text> 
		</view>
		
	</view>
</template>

<script>
	var app = getApp();
	export default {
		data() {
			return {
				date: "1970-01-01",
				startDate: "1970-01-01",
				endDate: "2088-08-08",
				
			}
		},
		onNavigationBarButtonTap() {
			this.updateBirthday();
		},
		onLoad() {
			var birthday = getApp().getUserInfoSession().birthday;
			this.date = getApp().dateFormat("YYY-mm-dd", new Date(birthday));
		},
		methods: {
			updateBirthday() {
				var me = this;
				var userId = getApp().getUserInfoSession().id;
				var birth = this.date;
				
				var pendingUserInfo = {
					"id": userId,
					"birthday": birth
				};
				
				// 修改生日
				var serverUrl = app.globalData.serverUrl;
				uni.request({
					method: "POST",
					header: {
						headerUserId: userId,
						headerUserToken: app.getUserSessionToken()
					},
					url: serverUrl + "/userInfo/modifyUserInfo?type=4",
					data: pendingUserInfo,
					success(result) {
						
						if (result.data.status == 200) {
							var userInfoUpdated = result.data.data;
							// 重置本地用户信息
							app.setUserInfoSession(userInfoUpdated);
							
							uni.navigateBack({
								delta: 1,
								animationType: "fade-out"
							})
						} else {
							uni.showToast({
								title: result.data.msg,
								icon: "none",
								duration: 3000
							});
						}
						
					}
				})
			},
			bindDateChange: function(e) {
				this.date = e.detail.value
			},
			getGraceDateStr(date) {
				return app.dateFormat("YYYY-mm-dd", date);
			},
		}
	}
</script>

